/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as RegisterIndexRouteImport } from './routes/register/index'
import { Route as CheckoutIndexRouteImport } from './routes/checkout/index'
import { Route as PickSeatsShowingIdRouteImport } from './routes/pick-seats/$showingId'
import { Route as FilmsFilmIdRouteImport } from './routes/films/$filmId'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const RegisterIndexRoute = RegisterIndexRouteImport.update({
  id: '/register/',
  path: '/register/',
  getParentRoute: () => rootRouteImport,
} as any)
const CheckoutIndexRoute = CheckoutIndexRouteImport.update({
  id: '/checkout/',
  path: '/checkout/',
  getParentRoute: () => rootRouteImport,
} as any)
const PickSeatsShowingIdRoute = PickSeatsShowingIdRouteImport.update({
  id: '/pick-seats/$showingId',
  path: '/pick-seats/$showingId',
  getParentRoute: () => rootRouteImport,
} as any)
const FilmsFilmIdRoute = FilmsFilmIdRouteImport.update({
  id: '/films/$filmId',
  path: '/films/$filmId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/films/$filmId': typeof FilmsFilmIdRoute
  '/pick-seats/$showingId': typeof PickSeatsShowingIdRoute
  '/checkout': typeof CheckoutIndexRoute
  '/register': typeof RegisterIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/films/$filmId': typeof FilmsFilmIdRoute
  '/pick-seats/$showingId': typeof PickSeatsShowingIdRoute
  '/checkout': typeof CheckoutIndexRoute
  '/register': typeof RegisterIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/films/$filmId': typeof FilmsFilmIdRoute
  '/pick-seats/$showingId': typeof PickSeatsShowingIdRoute
  '/checkout/': typeof CheckoutIndexRoute
  '/register/': typeof RegisterIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/films/$filmId'
    | '/pick-seats/$showingId'
    | '/checkout'
    | '/register'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/films/$filmId'
    | '/pick-seats/$showingId'
    | '/checkout'
    | '/register'
  id:
    | '__root__'
    | '/'
    | '/films/$filmId'
    | '/pick-seats/$showingId'
    | '/checkout/'
    | '/register/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  FilmsFilmIdRoute: typeof FilmsFilmIdRoute
  PickSeatsShowingIdRoute: typeof PickSeatsShowingIdRoute
  CheckoutIndexRoute: typeof CheckoutIndexRoute
  RegisterIndexRoute: typeof RegisterIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/register/': {
      id: '/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/checkout/': {
      id: '/checkout/'
      path: '/checkout'
      fullPath: '/checkout'
      preLoaderRoute: typeof CheckoutIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pick-seats/$showingId': {
      id: '/pick-seats/$showingId'
      path: '/pick-seats/$showingId'
      fullPath: '/pick-seats/$showingId'
      preLoaderRoute: typeof PickSeatsShowingIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/films/$filmId': {
      id: '/films/$filmId'
      path: '/films/$filmId'
      fullPath: '/films/$filmId'
      preLoaderRoute: typeof FilmsFilmIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  FilmsFilmIdRoute: FilmsFilmIdRoute,
  PickSeatsShowingIdRoute: PickSeatsShowingIdRoute,
  CheckoutIndexRoute: CheckoutIndexRoute,
  RegisterIndexRoute: RegisterIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
